Version=6.48
NumberOfModules=3
Module1=StateManager
Module2=HttpUtils2Service
Module3=HttpJob
Build1=HomeMon,be.mayeur.home.homemon
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="4" android:targetSdkVersion="14"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~SetApplicationAttribute(android:theme, "@android:style/Theme.Material.Light")~\n~'End of default text.~\n~'********* TabStrip ***********************~\n~CreateResource(drawable, background_tab.xml,~\n~<selector xmlns:android="http://schemas.android.com/apk/res/android"~\n~   android:exitFadeDuration="@android:integer/config_shortAnimTime">~\n~  <item android:state_pressed="true" android:drawable="@color/background_tab_pressed" />~\n~  <item android:state_focused="true" android:drawable="@color/background_tab_pressed"/>~\n~  <item android:drawable="@android:color/transparent"/>~\n~</selector>)~\n~CreateResource(values, colors.xml,~\n~<resources>~\n~  <color name="background_tab_pressed">#6633B5E5</color>~\n~</resources>)~\n~'******************************************~\n~'*************** Light theme based on version **************~\n~SetApplicationAttribute(android:theme, "@style/LightTheme")~\n~CreateResource(values-v20, theme.xml,~\n~<resources>~\n~  <style~\n~  name="LightTheme" parent="@android:style/Theme.Material.Light">~\n~  </style>~\n~</resources>)~\n~CreateResource(values-v14, theme.xml,~\n~<resources>~\n~  <style~\n~  name="LightTheme" parent="@android:style/Theme.Material.Light">~\n~  </style>~\n~</resources>)~\n~'**********************************************************~\n~#AdditionalJar: com.android.support:support-v4~\n~
IconFile=
NumberOfFiles=10
File1=kodiBlue.png
File2=kodiGreen.png
File3=kodiGrey.png
File4=kodired.png
File5=kodiYellow.png
File6=main.bal
File7=page1.bal
File8=page2.bal
File9=page3.bal
File10=Param.bal
NumberOfLibraries=10
Library1=core
Library2=okhttp
Library3=stringutils
Library4=json
Library5=network
Library6=b4xencryption
Library7=tabstripviewpager
Library8=randomaccessfile
Library9=reflection
Library10=abwifi
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Home Monitor
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: True
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Dim MyLan As ServerSocket
	Dim MyWiFi As ABWifi
	Dim AtHome As Boolean
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.

	Private BaseURL As String 
	Private TabStrip1 As TabStrip
	
	Private btnCancel As Button
	Private btnOK As Button
	Private txtPassword As EditText 
	Private txtPort As EditText 
	Private txtServer As EditText
	Private txtUser As EditText
	Private btnSpam As Button
	Private txtResult As EditText
	
	Dim url As String
	
	Private btnStart As Button
	Private btnSTop As Button
	
	Private WebView1 As WebView
	Private btnLoadFlCam As Button
	Private btnLoadGFl As Button
	Private txtCAM1port As EditText
	Private txtCAM2port As EditText

	Private btnClear As Button

	Private rPI_DAC As ImageView
	Private rPI_SPDIF As ImageView
	
	Private checkedSPDIF As Boolean
	Private checkedDAC As Boolean
	
	Private MyHost As String
	Private MySSID As String
	
	Private lblIPAddress As Label
	Private lblSSID As Label
	Private txtHomeSSID As EditText
	Private txtLocalServerIP As EditText
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	Activity.LoadLayout("Main")
	TabStrip1.LoadLayout("Page1", "Devices")
	TabStrip1.LoadLayout("Page2", "Spam Mon")	
	TabStrip1.LoadLayout("Page3", "Floor Cam")
	TabStrip1.LoadLayout("Param", "Settings")
	
	Activity.AddMenuItem("Devices", "mnu1")
	Activity.AddMenuItem("Spam Monitor", "mnu2")
	Activity.AddMenuItem("Floor Cam", "mnu3")
	Activity.AddMenuItem("Settings", "mnuSettings")
	
	' retrieve saved settings
	
	' check networks parameters
	MyLan.Initialize(0, "")
	
	If MyWiFi.ABLoadWifi() Then
		MySSID=MyWiFi.ABGetCurrentWifiInfo.SSID
	Else
		MySSID=""
	End If
	lblSSID.Text="SSID: " & MySSID
	AtHome=MySSID.Contains(StateManager.GetSetting2("HomeSSID", "CC88"))
	
	lblIPAddress.Text="IP: " & MyLan.GetMyIP()
	If AtHome Then
		MyHost="https://" & StateManager.GetSetting2("LocalServerIP", "192.168.0.12")
	Else
		txtServer.Text=StateManager.GetSetting2("BaseURL", "https://home.mayeur.be")
		MyHost=txtServer.Text
	End If

	txtPort.Text=StateManager.GetSetting2("Port", "443")
	BaseURL=MyHost & ":" & txtPort.Text
	
	txtUser.Text=StateManager.GetSetting2("User", "xavier")
	txtPassword.Text=StateManager.GetSetting("Password")
	If txtPassword.Text="" Then
		TabStrip1.ScrollTo(2, True)
	End If
	
	' Initialize buttons with pictures
	rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")
	rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")
	
End Sub

Sub Activity_Resume
	Probe_rPI("rPI_SPDIF")
	Probe_rPI("rPI_DAC")
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	Probe_rPI("rPI_SPDIF")
	Probe_rPI("rPI_DAC")
End Sub

Sub mnu1_Click
	TabStrip1.ScrollTo(0, True)
End Sub

Sub mnu2_Click
	TabStrip1.ScrollTo(1, True)
End Sub

Sub mnu3_Click
	TabStrip1.ScrollTo(2, True)
End Sub

Sub mnuSettings_Click
	TabStrip1.ScrollTo(3, True)
End Sub

Sub TabStrip1_PageSelected (Position As Int)
	' Log($"Current page: ${Position}"$)
End Sub


Sub JobDone(Job As HttpJob)

	Log("JobName = " & Job.JobName & ", Success = " & Job.Success)
	If Job.Success = True Then
		Log(Job.GetString)
		
		Select Job.JobName
		Case "Login"
				Log("Login: " & Job.GetString)
		Case "rPIDAC"
				If Job.GetString = "Kodi On" Then
					rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiGreen.png")
				Else If Job.GetString = "OFF" Then
					rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")
				Else If Job.GetString = "POWERED" Then
					rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiBlue.png")
				Else
					rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiRed.png")
				End If
		Case "rPISPDIF" 
			If Job.GetString = "Kodi On" Then
				rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiGreen.png")
			Else If Job.GetString = "OFF" Then
				rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")
			Else If Job.GetString = "POWERED" Then
					rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiBlue.png")
			Else
				rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiRed.png")
			End If	
		Case "prPI_SPDIF" 
			If Job.GetString = "OFF" Then
				checkedSPDIF = False
				rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")				
			Else if Job.GetString = "Kodi On" Then
				checkedSPDIF = True
				rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiGreen.png")	
			Else ' powered but kodi does not answer
				checkedSPDIF=False
				rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiBlue.png")				
			End If	
			Case "prPI_DAC"
				If Job.GetString = "OFF" Then
					checkedDAC = False
					rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")
				Else if Job.GetString = "Kodi On" Then
					checkedDAC = True
					rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiGreen.png")
				Else ' powered but kodi does not answer
					checkedDAC=False
					rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiBlue.png")
				End If
		Case "spam", "spamStart", "spamStop"
			txtResult.Text= Job.GetString			
		End Select

	Else
		Log("error" & Job.ErrorMessage)	
	End If


	Job.Release	


End Sub

Sub Probe_rPI(id As String)
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/kodistate"
	Job.Initialize("p" & id, Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	
	Job.Download(url & "?id=" & id)
	
End Sub

Sub btnOK_Click
	StateManager.SetSetting("BaseURL", txtServer.Text)
	StateManager.SetSetting("Port",txtPort.Text)
	
	StateManager.SetSetting("User", txtUser.Text)
	StateManager.SetSetting("Password", txtPassword.Text)	
	
	StateManager.SetSetting("CAM1port", txtCAM1port.Text)
	StateManager.SetSetting("CAM2port", txtCAM2port.Text)
	
	StateManager.SetSetting("HomeSSID", txtHomeSSID.Text)
	StateManager.SetSetting("LocalServerIP", txtLocalServerIP.Text)
	
	StateManager.SaveSettings
	If AtHome = False Then
		BaseURL=txtServer.Text & ":" & txtPort.Text
	End If
	TabStrip1.ScrollTo(0, True)
End Sub

Sub btnCancel_Click
	
End Sub

Sub btnSpam_Click
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/api?cmd=spam"
	Job.Initialize("spam", Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	Job.Download( url)
End Sub

Sub btnStart_Click
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/api?cmd=spam&param=start"
	Job.Initialize("spamStart", Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	Job.Download( url)	
End Sub

Sub btnSTop_Click
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/api?cmd=spam&param=stop"
	Job.Initialize("spamStop", Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	Job.Download( url)	
End Sub

Sub WebView1_UserAndPasswordRequired (Host As String, Realm As String) As String()
	Return Array As String(txtUser.Text, txtPassword.Text)
End Sub

Sub btnLoadFlCam_Click
	WebView1.LoadUrl(MyHost.Replace("https", "http") & ":" & txtCAM2port.text)
End Sub

Sub btnLoadGFl_Click
	WebView1.LoadUrl(MyHost.Replace("https", "http") & ":" & txtCAM1port.text)
End Sub


Sub btnClear_Click
	WebView1.LoadHtml("<html><body>Press a button</body></html>")
End Sub

Sub rPI_SPDIF_Click
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/kodi"
	Job.Initialize("rPISPDIF", Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiYellow.png")
	If checkedSPDIF Then
		Job.PostString(url,"id=rPI_SPDIF&method=OFF")			
	Else
		Job.PostString(url,"id=rPI_SPDIF&method=ON")
	End If	
	checkedSPDIF=Not(checkedSPDIF)	
End Sub

Sub rPI_SPDIF_LongClick
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/tdcmd"
	Job.Initialize("prPISPDIF", Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	rPI_SPDIF.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")
	checkedSPDIF = False
	Job.PostString(url,"id=rPI_SPDIF&method=OFF")		
End Sub

Sub rPI_DAC_Click
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/kodi"
	Job.Initialize("rPIDAC", Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiYellow.png")
	If checkedDAC Then
		Job.PostString(url,"id=rPI_DAC&method=OFF")
	Else
		Job.PostString(url,"id=rPI_DAC&method=ON")
	End If
	checkedDAC=Not(checkedDAC)
End Sub

Sub rPI_DAC_LongClick
	Dim Job As HttpJob
	Dim url As String
	
	url = BaseURL & "/tdcmd"
	Job.Initialize("prPIDAC", Me)
	Job.Username =txtUser.Text
	Job.Password =txtPassword.Text
	rPI_DAC.Bitmap=LoadBitmap(File.DirAssets, "kodiGrey.png")
	checkedDAC = False
	Job.PostString(url,"id=rPI_DAC&method=OFF")
End Sub